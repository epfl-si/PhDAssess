# Variables common to multiple roles (a.k.a. “rendezvous” vars) go here.

openshift_image_registry: "os-docker-registry.epfl.ch"
openshift_image_registry_inside: "docker-registry.default.svc:5000"
phd_assess_build_namespace: phd-assess-test

toplevel_state_dir: /srv/esb

esb_ssh_tunnels:
  host: itsphdrepor0001.xaas.epfl.ch
  username: esb-tunnel
  client_keys_dir: "{{ toplevel_state_dir }}/ssh-tunnel/client"
  forward:
    zeebe:
      - name: zeebe-quorum-0
  reverse:
    zeebe:
      - quorum_id: 1
        name: zeebe-quorum-1
        via: 22222
      - quorum_id: 2
        name: zeebe-quorum-2
        via: 22223
    prometheus:
      via: 22223

# The rendezvous port for Zeebe API connections (to use by clients and k8s services)
zeebe_ports:
  # The port of the “Zeebe gateways,” where clients connect:
  api: 26500
  # The port through which gateways reach brokers. Note that despite
  # every gateway having a broker next to it in the same pod, it will
  # not necessarily talk to that one. (Rather, the network coordinates
  # of all brokers are broadcast through the “gossip” mechanism when
  # gateways start up)
  command: 26501
  # The port that brokers use to connect to each other to make the Raft network:
  quorum: 26502
  # the Hazelcast connecting point
  hazelcast: 5701

_kafka_broker_hostname: kafka-broker
kafka_broker:
  image_name: kafka-kraft-broker
  hostname: "{{ _kafka_broker_hostname }}"
  address: "{{ _kafka_broker_hostname }}:9092"
  env:
    KAFKA_BROKER_ID: "1"
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
    KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://{{ _kafka_broker_hostname }}:29092,PLAINTEXT_HOST://{{ _kafka_broker_hostname }}:9092"
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
    KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
    KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
    KAFKA_JMX_PORT: "9101"
    KAFKA_JMX_HOSTNAME: "localhost"
    KAFKA_PROCESS_ROLES: "broker,controller"
    KAFKA_NODE_ID: "1"
    KAFKA_CONTROLLER_QUORUM_VOTERS: "1@{{ _kafka_broker_hostname }}:29093"
    KAFKA_LISTENERS: "PLAINTEXT://{{ _kafka_broker_hostname }}:29092,CONTROLLER://{{ _kafka_broker_hostname }}:29093,PLAINTEXT_HOST://{{ _kafka_broker_hostname }}:9092"
    KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
    KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

_zeebe_log_level: >-
  {{ "debug" if is_test | default(false) else "info" }}

zeebe_broker_env:
  PORT: '{{ zeebe_ports.api | string }}'
  JAVA_OPTS: "{{ '-Xmx2024m' if (openshift_namespace | default('VM')) == 'phd-assess' else '-Xmx1024m'  }}"
  ZEEBE_BROKER_NETWORK_MONITORINGAPI_HOST: '0.0.0.0'
  # https://docs.camunda.io/docs/self-managed/zeebe-deployment/operations/setting-up-a-cluster/
  ZEEBE_LOG_APPENDER: Stackdriver
  ZEEBE_BROKER_BACKPRESSURE_ALGORITHM: fixed
  ZEEBE_BROKER_BACKPRESSURE_FIXEDLIMIT_LIMIT: '300'
  ZEEBE_BROKER_THREADS_CPUTHREADCOUNT: '1'
  ZEEBE_BROKER_THREADS_IOTHREADCOUNT: '1'
  ZEEBE_BROKER_EXPORTERS_HAZELCAST_CLASSNAME: io.zeebe.hazelcast.exporter.HazelcastExporter
  ZEEBE_BROKER_EXPORTERS_HAZELCAST_JARPATH: lib/zeebe-hazelcast-exporter.jar
  ZEEBE_BROKER_EXPORTERS_HAZELCAST_PORT: '{{ zeebe_ports.hazelcast | string }}'
  ZEEBE_BROKER_CLUSTER_CLUSTERNAME: epfl
  ZEEBE_BROKER_CLUSTER_CLUSTERSIZE: "3"
  ZEEBE_BROKER_CLUSTER_REPLICATIONFACTOR: "3"
  ZEEBE_LOG_LEVEL: "{{ _zeebe_log_level }}"
  ATOMIX_LOG_LEVEL: "{{ _zeebe_log_level }}"
