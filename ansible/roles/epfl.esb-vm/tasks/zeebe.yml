# Tasks to set up the Zeebe cluster member on the VM, and the ssh tunnel
# (server-side) that goes with it
- include_vars: zeebe-vars.yml
  tags: always

- name: "Get OpenShift login token"
  delegate_to: localhost
  changed_when: false
  no_log: true
  shell:
    cmd: oc whoami -t
  register: _oc_whoami

- name: "Pull OpenShift-built images to the VM"
  when: _oc_whoami is not skipped
  shell:
    cmd: |
      docker login {{ openshift_image_registry }} -u unused --password "{{ _oc_whoami.stdout }}"
      {% for image in _images %}
      docker pull {{ openshift_image_registry }}/{{ phd_assess_build_namespace }}/{{ image }}:latest
      {% endfor %}
      docker logout {{ openshift_image_registry }}
  vars:
    _images:
      - zeebe-broker-with-exporters
  register: _pull_images
  changed_when: >-
    "Downloaded newer image" in _pull_images.stdout

- name: "Pull {{ openssh_server_image }}"
  community.docker.docker_image:
    name: "{{ openssh_server_image }}:{{ openssh_server_image_tag }}"
    source: pull

- name: "Initialize OpenSSH server keys in {{ openssh_server_keys_dir }}"
  shell:
    cmd: |
      if [ -d "{{ openssh_server_keys_dir }}" ]; then
        echo NOCHANGE
        exit 0
      fi

      docker run -v "{{ openssh_server_keys_dir }}:/keys" \
         "{{ openssh_server_image }}:{{ openssh_server_image_tag }}" \
         bash -c "cp -a /etc/ssh/* /keys"
  register: _openssh_server_key_init
  changed_when: >-
    "NOCHANGE" not in _openssh_server_key_init.stdout

- name: "{{ esb_ssh_tunnel.key_files.client | dirname }}"
  ansible.builtin.file:
    path: "{{ esb_ssh_tunnel.key_files.client | dirname }}"
    state: directory
    recurse: yes

- name: "Initialize OpenSSH client keys in {{ esb_ssh_tunnel.key_files.client | dirname }}"
  shell:
    cmd: |
      set -e -x
      cd "{{ esb_ssh_tunnel.key_files.client | dirname }}"
      if [ -f "id_rsa" ]; then
        echo "NOCHANGE"
        exit 0
      fi
      ssh-keygen -f id_rsa </dev/null
  register: _openssh_client_key_init
  changed_when: >-
    "NOCHANGE" not in _openssh_client_key_init.stdout

- name: "{{ esb_docker_network }} Docker network"
  community.docker.docker_network:
    name: "{{ esb_docker_network }}"

- name: "Read public key out of {{ esb_ssh_tunnel.key_files.client }}"
  shell: 'cat "{{ esb_ssh_tunnel.key_files.client }}"'
  register: _esb_tunnel_ssh_client_public_key
  changed_when: false

- name: "Run the OpenSSH server in Docker network {{ esb_docker_network }}"
  when: _esb_tunnel_ssh_client_public_key is not skipped
  community.docker.docker_container:
    name: "{{ openssh_tunnel_server_container_name }}"
    image: "{{ openssh_server_image }}:{{ openssh_server_image_tag }}"
    published_ports:
      - "{{ esb_ssh_tunnel.port }}:2222"
    networks:
      - name: "{{ esb_docker_network }}"
    env:
      PUBLIC_KEY: "{{ _esb_tunnel_ssh_client_public_key.stdout }}"
      USER_NAME: esb-tunnel
    volumes:
      - "{{ openssh_server_keys_dir }}:/config/ssh_host_keys"

- name: "Run Zeebe"
  community.docker.docker_container:
    name: zeebe
    image: "{{ openshift_image_registry }}/{{ phd_assess_build_namespace }}/zeebe-broker-with-exporters:latest"
    networks:
      - name: "{{ esb_docker_network }}"
    env:
      PORT: '26500'
      ZEEBE_BROKER_NETWORK_MONITORINGAPI_HOST: '0.0.0.0'
      # https://docs.camunda.io/docs/self-managed/zeebe-deployment/operations/setting-up-a-cluster/
      ZEEBE_BROKER_CLUSTER_CLUSTERNAME: epfl
      ZEEBE_BROKER_CLUSTER_NODEID: "0"
      ZEEBE_BROKER_CLUSTER_REPLICATIONFACTOR: "3"
      ZEEBE_BROKER_CLUSTER_CLUSTERSIZE: "3"
      ZEEBE_BROKER_CLUSTER_INITIALCONTACTPOINTS: >-
        {{ ",".join(_reverse_tunnel_zeebe_endpoints) }}
  vars:
    _reverse_tunnel_zeebe_endpoints:
      - "{{ openssh_tunnel_server_container_name }}:26501"
      - "{{ openssh_tunnel_server_container_name }}:26502"
