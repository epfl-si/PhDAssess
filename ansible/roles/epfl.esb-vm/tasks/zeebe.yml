- include_vars: zeebe-vars.yml
  tags: always

- name: "Get OpenShift login token"
  delegate_to: localhost
  changed_when: false
  no_log: true
  shell:
    cmd: oc whoami -t
  register: _oc_whoami

- name: "Pull OpenShift-built images to the VM"
  shell:
    cmd: |
      docker login {{ openshift_image_registry }} -u unused --password "{{ _oc_whoami.stdout }}"
      {% for image in _images %}
      docker pull {{ openshift_image_registry }}/{{ phd_assess_build_namespace }}/{{ image }}:latest
      {% endfor %}
      docker logout {{ openshift_image_registry }}
  vars:
    _images:
      - zeebe-broker-with-exporters
  register: _pull_images
  changed_when: >-
    "Downloaded newer image" in _pull_images.stdout

- name: "Pull {{ openssh_server_image }}"
  community.docker.docker_image:
    name: "{{ openssh_server_image }}:{{ openssh_server_image_tag }}"
    source: pull

- name: "Initialize OpenSSH server keys in {{ openssh_server_keys_dir }}"
  shell:
    cmd: |
      if [ -d "{{ openssh_server_keys_dir }}" ]; then
        echo NOCHANGE
        exit 0
      fi

      docker run -v "{{ openssh_server_keys_dir }}:/keys" \
         "{{ openssh_server_image }}:{{ openssh_server_image_tag }}" \
         bash -c "cp -a /etc/ssh/* /keys"
  register: _openssh_key_init
  changed_when: >-
    "NOCHANGE" not in _openssh_key_init.stdout

- name: "{{ esb_docker_network }} Docker network"
  community.docker.docker_network:
    name: "{{ esb_docker_network }}"

- name: "Run the OpenSSH server in Docker network {{ esb_docker_network }}"
  community.docker.docker_container:
    name: esb-openssh-tunnel-server
    image: "{{ openssh_server_image }}:{{ openssh_server_image_tag }}"
    published_ports:
      - "{{ esb_ssh_port }}:2222"
    networks:
      - name: "{{ esb_docker_network }}"
    volumes:
      - "{{ openssh_server_keys_dir }}:/config/ssh_host_keys"
