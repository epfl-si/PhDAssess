# Tasks to set up the Zeebe cluster member on the VM

- name: "Get OpenShift login token"
  delegate_to: localhost
  changed_when: false
  no_log: true
  shell:
    cmd: oc whoami -t
  register: _oc_whoami

- name: "Pull OpenShift-built images to the VM"
  when: _oc_whoami is not skipped
  shell:
    cmd: |
      docker login {{ openshift_image_registry }} -u unused --password "{{ _oc_whoami.stdout }}"
      {% for image in _images %}
      docker pull {{ openshift_image_registry }}/{{ phd_assess_build_namespace }}/{{ image }}:latest
      {% endfor %}
      docker logout {{ openshift_image_registry }}
  vars:
    _images:
      - zeebe-broker-with-exporters
  register: _pull_images
  changed_when: >-
    "Downloaded newer image" in _pull_images.stdout

- name: "Run Zeebe"
  community.docker.docker_container:
    name: zeebe
    image: "{{ openshift_image_registry }}/{{ phd_assess_build_namespace }}/zeebe-broker-with-exporters:latest"
    networks:
      - name: "{{ esb_docker_network }}"
    env:
      PORT: '26500'
      ZEEBE_BROKER_NETWORK_MONITORINGAPI_HOST: '0.0.0.0'
      # https://docs.camunda.io/docs/self-managed/zeebe-deployment/operations/setting-up-a-cluster/
      ZEEBE_BROKER_CLUSTER_CLUSTERNAME: epfl
      ZEEBE_BROKER_CLUSTER_NODEID: "0"
      ZEEBE_BROKER_CLUSTER_REPLICATIONFACTOR: "3"
      ZEEBE_BROKER_CLUSTER_CLUSTERSIZE: "3"
      ZEEBE_BROKER_CLUSTER_INITIALCONTACTPOINTS: >-
        {{ ",".join(_reverse_tunnel_zeebe_endpoints) }}
  vars:
    _reverse_tunnel_zeebe_endpoints:
      - "{{ ssh_tunnel_server_container_name }}:{{ _R_ports[0] }}"
      - "{{ ssh_tunnel_server_container_name }}:{{ _R_ports[1] }}"
    _R_ports: "{{ esb_ssh_tunnel.forwarded_ports.zeebe_quorum_to_k8s }}"
