## This tasks file is invoked with `import_tasks` as many times as we
## want k8s-run quorum members in the Zeebe cluster.
##
## The expected variables are:
##
## - node_id
##
##   The node ID as an integer between 0 (inclusive) and the
##   cluster size (exclusive)
##
## - data_volume
##
##   The description of the volume to use to store /usr/local/zeebe/data,
##   as a Kubernetes-compliant data structure described at
##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#volume-v1-core
##   (in practice, either an `emptyDir:` or a `persistentVolumeClaim:` dict)
##
## - peers
##
##   A list of host:port addresses to use to talk to the other quorum members.
##   If `peers` is not set, run a single-instance cluster
##
## - env
##
##   An optional dict of environment variables to set or override, e.g. to
##   configure an exporter

- name: "{{ _name }} StatefulSet"
  openshift:
    state: latest
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: "{{ _name }}"
      namespace: "{{ openshift_namespace }}"
    spec:
      replicas: 1
      selector:
         matchLabels: >-
           {{ _ha_labels if _has_ha
           else _match_labels_single_node }}
      template:
        metadata:
          labels: >-
            {{ _common_labels
            | combine(_ha_labels if _has_ha else {})
            }}
        spec:
          containers:
            - name: zeebe-broker
              image: "{{ openshift_local_images_base }}/zeebe-broker-with-exporters:latest"
              env: >-
                {{ zeebe_broker_common_env
                | combine(zeebe_broker_common_high_availability_env if _has_ha else {})
                | combine(_ha_env if _has_ha else {})
                | combine(env | default({}))
                | to_k8s_env }}
              resources:
                limits:
                  cpu: '1'
                  memory: >-
                    {{ "500M" if "test" in openshift_namespace
                    else "1G" }}
              ports:
                - name: metrics
                  containerPort: 9600
              volumeMounts:
                - name: zeebe-data
                  mountPath: /usr/local/zeebe/data
          volumes:
            - >-
              {{ _volume_name | combine(data_volume) }}
  vars:
    # Note that HA-specific vars still get expanded even when useless
    # (i.e. in a single-node situation); therefore, they must plan for
    # variables to be missing.
    _has_ha: "{{ peers is defined }}"
    _name: >-
      {{ "zeebe-broker-" + (node_id | string) if _has_ha else "zeebe-broker" }}
    _quorum_name: "zeebe-quorum-{{ node_id | default('_') }}"
    _volume_name:
      name: zeebe-data
    _common_labels:
      for-service: "{{ zeebe_gateway_servicename }}"
      for-prometheus-job: zeebe
    _ha_labels:
      zeebe-quorum-member: "{{ _quorum_name }}"
    _match_labels_single_node:
      for-service: "{{ zeebe_gateway_servicename }}"
    # Gets merged with `data_volume` provided by caller
    _ha_env:
      ZEEBE_BROKER_CLUSTER_NODEID: "{{ node_id | default('_') | string }}"
      ZEEBE_BROKER_CLUSTER_INITIALCONTACTPOINTS: >-
        {{ ",".join(peers | default([])) }}
      # https://github.com/camunda-cloud/zeebe/issues/5410 and
      # https://github.com/camunda-cloud/zeebe/blob/develop/qa/integration-tests/src/test/java/io/camunda/zeebe/it/network/AdvertisedAddressTest.java#L150
      ZEEBE_BROKER_NETWORK_INTERNALAPI_ADVERTISEDHOST: >-
        {{ _quorum_name }}
      ZEEBE_BROKER_NETWORK_COMMANDAPI_ADVERTISEDHOST: >-
        {{ _quorum_name }}
