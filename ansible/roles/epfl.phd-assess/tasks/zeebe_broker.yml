- name: "Pull upstream {{ zeebe_broker_base_image_mirrored_from }} into {{ zeebe_broker_base_image_mirrored_to }}"
  openshift_imagestream:
    state: latest
    metadata:
      name: zeebe-broker
      namespace: "{{openshift_namespace}}"
    from: "{{ zeebe_broker_base_image_mirrored_from }}"
    tag: "{{ zeebe_broker_version }}"

- name: "Build custom Zeebe Broker image"
  openshift_imagestream:
    state: latest
    metadata:
      name: zeebe-broker-kafka
      namespace: "{{openshift_namespace}}"
    from:
      kind: ImageStreamTag
      name: "zeebe-broker:{{ zeebe_broker_version }}"
      namespace: "{{ openshift_namespace }}"
    source:
      dockerfile: |
        FROM camunda/zeebe
        ADD "{{ zeebe_broker_kafka_exporter_jar_url }}" /usr/local/zeebe/lib/zeebe-kafka-exporter-with-dependencies.jar
    spec:
      resources:
        limits:
          cpu: '1'
          memory: 100M
  register: _openshift_image_zeebe_broker

- name: "Rebuild custom Zeebe Broker image now"
  when: _openshift_image_zeebe_broker is changed
  shell: "oc -n {{openshift_namespace}} start-build --wait zeebe-broker-kafka"


- name: zeebe-broker Deployment Config
  openshift:
    state: latest
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: zeebe-broker
      namespace: "{{openshift_namespace}}"
    spec:
      replicas: 1
      selector:
        deployment-config.name: zeebe-broker
      strategy:
        activeDeadlineSeconds: 21600
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
        resources:
          limits:
            cpu: '1'
            memory: 1G
      template:
        metadata:
          creationTimestamp: null
          labels:
            deployment-config.name: zeebe-broker
        spec:
          containers:
            - name: zeebe-broker
              image: 'docker-registry.default.svc:5000/{{openshift_namespace}}/zeebe:{{ zeebe_broker_version }}'
              env:
              - name: 'PORT'
                value: '26500'
              - name: 'ZEEBE_LOG_LEVEL'
                value: 'info'
              - name: 'ZEEBE_LOG_APPENDER'
                value: 'Stackdriver'
              - name: 'ZEEBE_BROKER_BACKPRESSURE_ALGORITHM'
                value: 'fixed'
              - name: 'ZEEBE_BROKER_BACKPRESSURE_FIXEDLIMIT_LIMIT'
                value: '300'
              - name: 'ZEEBE_BROKER_NETWORK_MONITORINGAPI_HOST'
                value: '0.0.0.0'
              imagePullPolicy: Always
              resources:
                limits:
                  cpu: '1'
                  memory: 1G
              ports:
                - name: metrics
                  containerPort: 9600
              volumeMounts:
                - mountPath: /usr/local/zeebe/data
                  name: "{{ volume_zeebe_name }}"
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: { }
          terminationGracePeriodSeconds: 30
          volumes:
            - name: "{{ volume_zeebe_name }}"
              persistentVolumeClaim:
                claimName: "{{ volume_zeebe_name }}"
      triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - zeebe-broker
          from:
            kind: ImageStreamTag
            name: 'zeebe-broker:latest'
            namespace: "{{openshift_namespace}}"

- name: zeebe-broker Service
  openshift:
    state: latest
    apiVersion: v1
    kind: Service
    metadata:
      name: "{{ zeebe_broker_servicename }}"
      namespace: "{{openshift_namespace}}"
    spec:
      type: ClusterIP
      ports:
        - name: "{{ zeebe_broker_port_name1 }}"
          port: "{{ zeebe_broker_port1 }}"
          protocol: TCP
          targetPort: "{{ zeebe_broker_port1 }}"
        - name: "{{ zeebe_broker_port_name2 }}"
          port: "{{ zeebe_broker_port2 }}"
          protocol: TCP
          targetPort: "{{ zeebe_broker_port2 }}"
      selector:
        deployment-config.name: zeebe-broker
