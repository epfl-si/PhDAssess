- tags: always
  include_vars: common-k8s-vars.yml

- name: "Pull upstream {{ zeebe_broker_base_image.qualified }} into {{ zeebe_broker_base_image.mirrored }}"
  when: openshift_namespace == phd_assess_build_namespace
  openshift_imagestream:
    state: latest
    metadata:
      name: "{{ zeebe_broker_base_image.shortname }}"
      namespace: "{{ openshift_namespace }}"
    from: "{{ zeebe_broker_base_image.qualified }}"
    tag: "{{ zeebe_broker_base_image.tag }}"

- name: "Build custom Zeebe Broker image"
  when: openshift_namespace == phd_assess_build_namespace
  openshift_imagestream:
    state: latest
    metadata:
      name: zeebe-broker-with-exporters
      namespace: "{{ openshift_namespace }}"
    from: "{{ zeebe_broker_base_image.mirrored }}"
    source:
      dockerfile: |
        FROM camunda/zeebe
        ADD "{{ zeebe_broker_kafka_exporter_jar_url }}" /usr/local/zeebe/lib/zeebe-kafka-exporter-with-dependencies.jar
        ADD "{{ zeebe_broker_hazelcast_exporter_jar_url }}" /usr/local/zeebe/lib/zeebe-hazelcast-exporter.jar
        ADD "{{ zeebe_broker_mongodb_exporter_jar_url }}" /usr/local/zeebe/lib/zeebe-mongo-exporter.jar
        RUN chmod 755 /usr/local/zeebe/lib/*jar
    spec:
      resources:
        limits:
          cpu: '1'
          memory: 100M
  register: _openshift_image_zeebe_broker

- name: "Rebuild custom Zeebe Broker image now"
  when: |
     ( openshift_namespace == phd_assess_build_namespace )
     and
     ( (_openshift_image_zeebe_broker | default({})) is changed )
  shell: "oc -n {{openshift_namespace}} start-build --wait zeebe-broker-with-exporters"

- name: "Promote zeebe-broker-with-exporters from {{ phd_assess_build_namespace }} to production"
  when: >-
    (openshift_namespace != phd_assess_build_namespace)
    and
    ("zeebe-promote" in ansible_run_tags)
  tags: zeebe-promote
  include_tasks:
    file: _promote_image.yml
    apply:
      tags:
        - zeebe
        - zeebe-promote
  vars:
    promote_image_name: zeebe-broker-with-exporters
    promote_image_tag: "latest"
    promote_from_namespace: "{{ phd_assess_build_namespace }}"

# We run a quorum of three Zeebe brokers. Two of these are on
# Kubernetes, with only one of them writing its Raft log onto NFS (for
# fault tolerance purposes, we don't want a majority of the brokers
# doing that). The third one (numbered 0) is on a VM (see
# ../../epfl.esb-vm/tasks/zeebe.yml).
- import_tasks: _zeebe-k8s-broker.yml
  vars:
    node_id: 1
    data_volume: >-
      {{ _data_volume_prod if openshift_namespace == "phd-assess"
      else dict(emptyDir=dict()) }}
    peers:
      - zeebe-quorum-2:26502
      - zeebe-quorum-0:26502
    _data_volume_prod:
      persistentVolumeClaim:
        claimName: "{{ volume_zeebe_name }}"

- import_tasks: _zeebe-k8s-broker.yml
  vars:
    node_id: 2
    data_volume:
      emptyDir: {}
    peers:
      - zeebe-quorum-1:26502
      - zeebe-quorum-0:26502

- name: "{{ zeebe_broker_servicename }} Service"
  openshift:
    apiVersion: v1
    kind: Service
    metadata:
      name: "{{ zeebe_broker_servicename }}"
      namespace: "{{ openshift_namespace }}"
    spec:
       type: ClusterIP
       ports:
        - name: "zeebe-api"
          port: "{{ zeebe_ports.api }}"
          protocol: TCP
          targetPort: "{{ zeebe_ports.api }}"
       selector: >-
         {{ _old_style_selector if _is_old_style_quorum
         else _post_CHG0041195_selector }}
  vars:
    ## TODO(CHG0041195): upon starting the change, this variable
    ## should always be false (i.e. one should remove it, simplify
    ## the ternary construct above, and delete all these vars)
    _is_old_style_quorum: >-
      {{ openshift_namespace == "phd-assess" }}
    _old_style_selector:
      deployment-config.name: "zeebe-broker"
    _post_CHG0041195_selector:
      for-service: zeebe-broker

- name: >-
    {{ esb_ssh_tunnels.reverse_ports | map(attribute="name") | join(" and ") }} Services
  openshift:
    state: latest
    apiVersion: v1
    kind: Service
    metadata:
      name: "{{ item.name }}"
      namespace: "{{ openshift_namespace }}"
    spec:
      type: ClusterIP
      ports:
        - name: "zeebe-raft"
          port: "{{ zeebe_ports.quorum }}"
          protocol: TCP
          targetPort: "{{ zeebe_ports.quorum }}"
        - name: "zeebe-command"
          port: "{{ zeebe_ports.command }}"
          protocol: TCP
          targetPort: "{{ zeebe_ports.command }}"
      selector:
        zeebe-quorum-member: "{{ item.name }}"
  with_items: "{{ esb_ssh_tunnels.reverse_ports }}"
