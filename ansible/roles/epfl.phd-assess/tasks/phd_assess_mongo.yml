- include_vars: common-k8s-vars.yml
  tags: always

- name: "Pull upstream {{ phd_assess_mongo_image.qualified }} image into {{ phd_assess_mongo_image.mirrored }}"
  openshift_imagestream:
    metadata:
      name: "{{ phd_assess_mongo_image.shortname }}"
      namespace: "{{ openshift_namespace }}"
    from: "{{ phd_assess_mongo_image.qualified }}"
    tag: "{{ phd_assess_mongo_image.tag }}"

- name: phd-assess-mongo Deployment Config
  openshift:
    state: latest
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: phd-assess-mongo
      namespace: "{{openshift_namespace}}"
    spec:
      replicas: 1
      selector:
        deployment-config.name: phd-assess-mongo
      strategy: "{{ k8s_frugal_strategy }}"
      template:
        metadata:
          labels:
            deployment-config.name: phd-assess-mongo
        spec:
          containers:
            - name: mongodb
              image: "{{ phd_assess_mongo_image.mirrored }}"
              resources:
                limits:
                  cpu: '1'
                  memory: 200M
              volumeMounts:
                - name: data-db
                  mountPath: /data/db
          volumes:
            - name: data-db
              emptyDir: {}
      triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - mongodb
          from:
            kind: ImageStreamTag
            name: "mongo:{{ phd_assess_mongo_image.tag }}"
            namespace: "{{ openshift_namespace }}"

- name: phd-assess-mongo Service
  openshift:
    state: latest
    apiVersion: v1
    kind: Service
    metadata:
      name: mongo
      namespace: "{{openshift_namespace}}"
    spec:
      type: ClusterIP
      ports:
        - name: mongo
          port: 27017
          targetPort: 27017
      selector:
        deployment-config.name: phd-assess-mongo
